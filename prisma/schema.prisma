// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation", "selectRelationCount"]
}

model User {
  id             String    @id @default(cuid())
  password       String
  email          String    @unique
  username       String    @unique
  following      User[]    @relation("FollowRelation", references: [id])
  follower       User[]    @relation("FollowRelation", references: [id])
  rooms          Room[]    @relation("JoinRelation")
  videos         Video[]
  messages       Message[]
  avatar         String?
  currentUsing   Boolean   @default(false)
  hosting        Room[]    @relation("hostingRelation")
  watching       Room?     @relation("WatchingRelation", fields: [watchingRoomId], references: [id])
  watchingRoomId Int?
  enterTime      DateTime?
}

model Video {
  id           Int      @id @default(autoincrement())
  url          String
  title        String
  channelTitle String
  thumbnail    String
  type         Type     @default(YOUTUBE)
  rooms        Room[]
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?
  createdAt    DateTime @default(now())

  @@unique([url, userId])
}

model Message {
  id        Int      @id @default(autoincrement())
  room      Room     @relation(fields: [roomId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  text      String
  createdAt DateTime @default(now())
  roomId    Int
  userId    String
}

model Room {
  id           Int       @id @default(autoincrement())
  users        User[]    @relation("JoinRelation")
  host         User      @relation("hostingRelation", fields: [hostId], references: [id])
  hostId       String
  messages     Message[]
  url          String
  title        String
  password     String?
  isLocked     Boolean   @default(false)
  videos       Video[]
  isLive       Boolean?
  createdAt    DateTime  @default(now())
  watching     User[]    @relation("WatchingRelation")
  watchingTime Int       @default(0)

  @@unique([hostId, isLive])
}

enum Type {
  YOUTUBE
  NETFLIX
}
